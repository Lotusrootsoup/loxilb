// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/loxilb-io/loxilb/api/models"
)

// GetLogsOKCode is the HTTP code returned for type GetLogsOK
const GetLogsOKCode int = 200

/*
GetLogsOK Logs fetched successfully

swagger:response getLogsOK
*/
type GetLogsOK struct {

	/*
	  In: Body
	*/
	Payload *models.Logs `json:"body,omitempty"`
}

// NewGetLogsOK creates GetLogsOK with default headers values
func NewGetLogsOK() *GetLogsOK {

	return &GetLogsOK{}
}

// WithPayload adds the payload to the get logs o k response
func (o *GetLogsOK) WithPayload(payload *models.Logs) *GetLogsOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get logs o k response
func (o *GetLogsOK) SetPayload(payload *models.Logs) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetLogsOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetLogsBadRequestCode is the HTTP code returned for type GetLogsBadRequest
const GetLogsBadRequestCode int = 400

/*
GetLogsBadRequest Invalid query parameters

swagger:response getLogsBadRequest
*/
type GetLogsBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetLogsBadRequest creates GetLogsBadRequest with default headers values
func NewGetLogsBadRequest() *GetLogsBadRequest {

	return &GetLogsBadRequest{}
}

// WithPayload adds the payload to the get logs bad request response
func (o *GetLogsBadRequest) WithPayload(payload *models.Error) *GetLogsBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get logs bad request response
func (o *GetLogsBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetLogsBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetLogsInternalServerErrorCode is the HTTP code returned for type GetLogsInternalServerError
const GetLogsInternalServerErrorCode int = 500

/*
GetLogsInternalServerError Internal server error

swagger:response getLogsInternalServerError
*/
type GetLogsInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetLogsInternalServerError creates GetLogsInternalServerError with default headers values
func NewGetLogsInternalServerError() *GetLogsInternalServerError {

	return &GetLogsInternalServerError{}
}

// WithPayload adds the payload to the get logs internal server error response
func (o *GetLogsInternalServerError) WithPayload(payload *models.Error) *GetLogsInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get logs internal server error response
func (o *GetLogsInternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetLogsInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
