// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"context"
	"net/http"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime/middleware"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/loxilb-io/loxilb/api/models"
)

// GetConfigBgpPolicyDefinedsetsDefinesetTypeTypeNameHandlerFunc turns a function with the right signature into a get config bgp policy definedsets defineset type type name handler
type GetConfigBgpPolicyDefinedsetsDefinesetTypeTypeNameHandlerFunc func(GetConfigBgpPolicyDefinedsetsDefinesetTypeTypeNameParams, interface{}) middleware.Responder

// Handle executing the request and returning a response
func (fn GetConfigBgpPolicyDefinedsetsDefinesetTypeTypeNameHandlerFunc) Handle(params GetConfigBgpPolicyDefinedsetsDefinesetTypeTypeNameParams, principal interface{}) middleware.Responder {
	return fn(params, principal)
}

// GetConfigBgpPolicyDefinedsetsDefinesetTypeTypeNameHandler interface for that can handle valid get config bgp policy definedsets defineset type type name params
type GetConfigBgpPolicyDefinedsetsDefinesetTypeTypeNameHandler interface {
	Handle(GetConfigBgpPolicyDefinedsetsDefinesetTypeTypeNameParams, interface{}) middleware.Responder
}

// NewGetConfigBgpPolicyDefinedsetsDefinesetTypeTypeName creates a new http.Handler for the get config bgp policy definedsets defineset type type name operation
func NewGetConfigBgpPolicyDefinedsetsDefinesetTypeTypeName(ctx *middleware.Context, handler GetConfigBgpPolicyDefinedsetsDefinesetTypeTypeNameHandler) *GetConfigBgpPolicyDefinedsetsDefinesetTypeTypeName {
	return &GetConfigBgpPolicyDefinedsetsDefinesetTypeTypeName{Context: ctx, Handler: handler}
}

/*
	GetConfigBgpPolicyDefinedsetsDefinesetTypeTypeName swagger:route GET /config/bgp/policy/definedsets/{defineset_type}/{type_name} getConfigBgpPolicyDefinedsetsDefinesetTypeTypeName

# Get the all of BGP definedsets

Get the all of BGP, prefix/neighbor/community/extcommunity/aspath/largecommunity
*/
type GetConfigBgpPolicyDefinedsetsDefinesetTypeTypeName struct {
	Context *middleware.Context
	Handler GetConfigBgpPolicyDefinedsetsDefinesetTypeTypeNameHandler
}

func (o *GetConfigBgpPolicyDefinedsetsDefinesetTypeTypeName) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		*r = *rCtx
	}
	var Params = NewGetConfigBgpPolicyDefinedsetsDefinesetTypeTypeNameParams()
	uprinc, aCtx, err := o.Context.Authorize(r, route)
	if err != nil {
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}
	if aCtx != nil {
		*r = *aCtx
	}
	var principal interface{}
	if uprinc != nil {
		principal = uprinc.(interface{}) // this is really a interface{}, I promise
	}

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params, principal) // actually handle the request
	o.Context.Respond(rw, r, route.Produces, route, res)

}

// GetConfigBgpPolicyDefinedsetsDefinesetTypeTypeNameOKBody get config bgp policy definedsets defineset type type name o k body
//
// swagger:model GetConfigBgpPolicyDefinedsetsDefinesetTypeTypeNameOKBody
type GetConfigBgpPolicyDefinedsetsDefinesetTypeTypeNameOKBody struct {

	// definedsets attr
	DefinedsetsAttr []*models.BGPPolicyDefinedSetGetEntry `json:"definedsetsAttr"`
}

// Validate validates this get config bgp policy definedsets defineset type type name o k body
func (o *GetConfigBgpPolicyDefinedsetsDefinesetTypeTypeNameOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateDefinedsetsAttr(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetConfigBgpPolicyDefinedsetsDefinesetTypeTypeNameOKBody) validateDefinedsetsAttr(formats strfmt.Registry) error {
	if swag.IsZero(o.DefinedsetsAttr) { // not required
		return nil
	}

	for i := 0; i < len(o.DefinedsetsAttr); i++ {
		if swag.IsZero(o.DefinedsetsAttr[i]) { // not required
			continue
		}

		if o.DefinedsetsAttr[i] != nil {
			if err := o.DefinedsetsAttr[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("getConfigBgpPolicyDefinedsetsDefinesetTypeTypeNameOK" + "." + "definedsetsAttr" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("getConfigBgpPolicyDefinedsetsDefinesetTypeTypeNameOK" + "." + "definedsetsAttr" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// ContextValidate validate this get config bgp policy definedsets defineset type type name o k body based on the context it is used
func (o *GetConfigBgpPolicyDefinedsetsDefinesetTypeTypeNameOKBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateDefinedsetsAttr(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetConfigBgpPolicyDefinedsetsDefinesetTypeTypeNameOKBody) contextValidateDefinedsetsAttr(ctx context.Context, formats strfmt.Registry) error {

	for i := 0; i < len(o.DefinedsetsAttr); i++ {

		if o.DefinedsetsAttr[i] != nil {
			if err := o.DefinedsetsAttr[i].ContextValidate(ctx, formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("getConfigBgpPolicyDefinedsetsDefinesetTypeTypeNameOK" + "." + "definedsetsAttr" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("getConfigBgpPolicyDefinedsetsDefinesetTypeTypeNameOK" + "." + "definedsetsAttr" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetConfigBgpPolicyDefinedsetsDefinesetTypeTypeNameOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetConfigBgpPolicyDefinedsetsDefinesetTypeTypeNameOKBody) UnmarshalBinary(b []byte) error {
	var res GetConfigBgpPolicyDefinedsetsDefinesetTypeTypeNameOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
