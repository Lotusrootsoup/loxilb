// Code generated by go-swagger; DO NOT EDIT.

package auth

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/loxilb-io/loxilb/api/models"
)

// GetOauthProviderCallbackOKCode is the HTTP code returned for type GetOauthProviderCallbackOK
const GetOauthProviderCallbackOKCode int = 200

/*
GetOauthProviderCallbackOK OK

swagger:response getOauthProviderCallbackOK
*/
type GetOauthProviderCallbackOK struct {

	/*
	  In: Body
	*/
	Payload *models.OauthLoginResponse `json:"body,omitempty"`
}

// NewGetOauthProviderCallbackOK creates GetOauthProviderCallbackOK with default headers values
func NewGetOauthProviderCallbackOK() *GetOauthProviderCallbackOK {

	return &GetOauthProviderCallbackOK{}
}

// WithPayload adds the payload to the get oauth provider callback o k response
func (o *GetOauthProviderCallbackOK) WithPayload(payload *models.OauthLoginResponse) *GetOauthProviderCallbackOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get oauth provider callback o k response
func (o *GetOauthProviderCallbackOK) SetPayload(payload *models.OauthLoginResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetOauthProviderCallbackOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetOauthProviderCallbackBadRequestCode is the HTTP code returned for type GetOauthProviderCallbackBadRequest
const GetOauthProviderCallbackBadRequestCode int = 400

/*
GetOauthProviderCallbackBadRequest Bad Request

swagger:response getOauthProviderCallbackBadRequest
*/
type GetOauthProviderCallbackBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.OauthErrorResponse `json:"body,omitempty"`
}

// NewGetOauthProviderCallbackBadRequest creates GetOauthProviderCallbackBadRequest with default headers values
func NewGetOauthProviderCallbackBadRequest() *GetOauthProviderCallbackBadRequest {

	return &GetOauthProviderCallbackBadRequest{}
}

// WithPayload adds the payload to the get oauth provider callback bad request response
func (o *GetOauthProviderCallbackBadRequest) WithPayload(payload *models.OauthErrorResponse) *GetOauthProviderCallbackBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get oauth provider callback bad request response
func (o *GetOauthProviderCallbackBadRequest) SetPayload(payload *models.OauthErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetOauthProviderCallbackBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetOauthProviderCallbackInternalServerErrorCode is the HTTP code returned for type GetOauthProviderCallbackInternalServerError
const GetOauthProviderCallbackInternalServerErrorCode int = 500

/*
GetOauthProviderCallbackInternalServerError Internal Server Error

swagger:response getOauthProviderCallbackInternalServerError
*/
type GetOauthProviderCallbackInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.OauthErrorResponse `json:"body,omitempty"`
}

// NewGetOauthProviderCallbackInternalServerError creates GetOauthProviderCallbackInternalServerError with default headers values
func NewGetOauthProviderCallbackInternalServerError() *GetOauthProviderCallbackInternalServerError {

	return &GetOauthProviderCallbackInternalServerError{}
}

// WithPayload adds the payload to the get oauth provider callback internal server error response
func (o *GetOauthProviderCallbackInternalServerError) WithPayload(payload *models.OauthErrorResponse) *GetOauthProviderCallbackInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get oauth provider callback internal server error response
func (o *GetOauthProviderCallbackInternalServerError) SetPayload(payload *models.OauthErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetOauthProviderCallbackInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
