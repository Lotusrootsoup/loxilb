// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// ProcessedTrafficMetrics processed traffic metrics
//
// swagger:model ProcessedTrafficMetrics
type ProcessedTrafficMetrics struct {

	// processed bytes
	ProcessedBytes float64 `json:"processed_bytes,omitempty"`

	// processed packets
	ProcessedPackets float64 `json:"processed_packets,omitempty"`

	// processed sctp bytes
	ProcessedSctpBytes float64 `json:"processed_sctp_bytes,omitempty"`

	// processed tcp bytes
	ProcessedTCPBytes float64 `json:"processed_tcp_bytes,omitempty"`

	// processed udp bytes
	ProcessedUDPBytes float64 `json:"processed_udp_bytes,omitempty"`
}

// Validate validates this processed traffic metrics
func (m *ProcessedTrafficMetrics) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this processed traffic metrics based on context it is used
func (m *ProcessedTrafficMetrics) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *ProcessedTrafficMetrics) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ProcessedTrafficMetrics) UnmarshalBinary(b []byte) error {
	var res ProcessedTrafficMetrics
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
