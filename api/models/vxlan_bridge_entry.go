// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// VxlanBridgeEntry vxlan bridge entry
//
// swagger:model VxlanBridgeEntry
type VxlanBridgeEntry struct {

	// ep intf
	// Required: true
	EpIntf *string `json:"epIntf"`

	// vxlan ID
	// Required: true
	VxlanID *int64 `json:"vxlanID"`
}

// Validate validates this vxlan bridge entry
func (m *VxlanBridgeEntry) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateEpIntf(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateVxlanID(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *VxlanBridgeEntry) validateEpIntf(formats strfmt.Registry) error {

	if err := validate.Required("epIntf", "body", m.EpIntf); err != nil {
		return err
	}

	return nil
}

func (m *VxlanBridgeEntry) validateVxlanID(formats strfmt.Registry) error {

	if err := validate.Required("vxlanID", "body", m.VxlanID); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this vxlan bridge entry based on context it is used
func (m *VxlanBridgeEntry) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *VxlanBridgeEntry) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *VxlanBridgeEntry) UnmarshalBinary(b []byte) error {
	var res VxlanBridgeEntry
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
