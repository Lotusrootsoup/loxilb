// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// RouteEntry route entry
//
// swagger:model RouteEntry
type RouteEntry struct {

	// IP address and netmask
	// Required: true
	DestinationIPNet *string `json:"destinationIPNet"`

	// IP address for nexthop
	// Required: true
	Gateway *string `json:"gateway"`

	// Protocol type of the route like "static"
	Protocol string `json:"protocol,omitempty"`
}

// Validate validates this route entry
func (m *RouteEntry) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateDestinationIPNet(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateGateway(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *RouteEntry) validateDestinationIPNet(formats strfmt.Registry) error {

	if err := validate.Required("destinationIPNet", "body", m.DestinationIPNet); err != nil {
		return err
	}

	return nil
}

func (m *RouteEntry) validateGateway(formats strfmt.Registry) error {

	if err := validate.Required("gateway", "body", m.Gateway); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this route entry based on context it is used
func (m *RouteEntry) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *RouteEntry) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *RouteEntry) UnmarshalBinary(b []byte) error {
	var res RouteEntry
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
